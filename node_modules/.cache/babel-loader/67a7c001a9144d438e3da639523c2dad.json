{"ast":null,"code":"import _slicedToArray from \"/var/www/reactapps/testing-app-refactoring/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/var/www/reactapps/testing-app-refactoring/src/components/pages/RegisterForm.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Form, Input } from 'semantic-ui-react';\nimport { validateRegisterForm } from '../../actions';\n\nfunction RegisterForm() {\n  // const [validation, setValidation] = useState('');\n  // const [firstName, setFirstName] = useState('');\n  // const [lastName, setLastName] = useState('');\n  // const [password, setPassword] = useState('');\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        formState = _useState2[0],\n        setFormState = _useState2[1]; // useEffect(() => {\n  //     if (!validation) {\n  //         console.log('s');\n  //         return <Component.type {...Component.props} {...extraProps} />;\n  //     }\n  // }, [validation]);\n\n\n  function validate(formState) {\n    if (formState[value]) {\n      return formState[value].length > 0 ? false : {\n        content: 'required field',\n        pointing: 'left'\n      };\n    }\n\n    return false;\n  }\n\n  console.log(formState);\n  return React.createElement(Form, {\n    id: 'register-ui-form',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    widths: \"equal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    id: \"form-input-control-first-name\",\n    control: Input,\n    error: validate('firstName'),\n    value: formState['firstName'],\n    onChange: e => setFormState({\n      firstName: e.target.value\n    }),\n    label: \"First name\",\n    placeholder: \"First name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Form.Field, {\n    id: \"form-input-control-last-name\",\n    error: validate('lastName'),\n    control: Input,\n    value: formState['lastName'],\n    onChange: e => setFormState({\n      lastName: e.target.value\n    }) //onChange={e => validateRegisterForm(lastName, e.target.value)}\n    ,\n    label: \"Last name\",\n    placeholder: \"Last name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    id: \"form-input-control-last-name\",\n    error: validate('password'),\n    control: Input,\n    value: formState['password'],\n    onChange: e => setFormState({\n      password: e.target.value\n    }),\n    label: \"password\",\n    placeholder: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Form.Checkbox, {\n    error: {\n      content: 'You must agree to the terms and conditions',\n      pointing: 'left'\n    },\n    label: \"I agree to the Terms and Conditions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(Form.Button, {\n    onClick: () => validate(formState),\n    content: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }));\n}\n\nexport default RegisterForm;","map":{"version":3,"sources":["/var/www/reactapps/testing-app-refactoring/src/components/pages/RegisterForm.js"],"names":["React","useEffect","useState","Form","Input","validateRegisterForm","RegisterForm","formState","setFormState","validate","value","length","content","pointing","console","log","e","firstName","target","lastName","password"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {Form, Input} from 'semantic-ui-react'\nimport {validateRegisterForm} from '../../actions'\n\nfunction RegisterForm() {\n\n    // const [validation, setValidation] = useState('');\n    // const [firstName, setFirstName] = useState('');\n    // const [lastName, setLastName] = useState('');\n    // const [password, setPassword] = useState('');\n    const [formState, setFormState] = useState([]);\n\n    // useEffect(() => {\n    //     if (!validation) {\n    //         console.log('s');\n    //         return <Component.type {...Component.props} {...extraProps} />;\n    //     }\n    // }, [validation]);\n    function validate(formState) {\n        if (formState[value]) {\n            return formState[value].length > 0 ? false :\n             {content: 'required field', pointing: 'left'}\n        }\n        return false;\n    }\n    console.log(formState);\n\n    return (\n        <Form id={'register-ui-form'}>\n            <Form.Group widths='equal'>\n                <Form.Field\n                    id='form-input-control-first-name'\n                    control={Input}\n                    error={validate('firstName')}\n                    value={formState['firstName']}\n                    onChange={e => setFormState({firstName: e.target.value})}\n                    label='First name'\n                    placeholder='First name'\n                />\n                <Form.Field\n                    id='form-input-control-last-name'\n                    error={validate('lastName')}\n                    control={Input}\n                    value={formState['lastName']}\n                    onChange={e => setFormState({lastName: e.target.value})}\n                    //onChange={e => validateRegisterForm(lastName, e.target.value)}\n                    label='Last name'\n                    placeholder='Last name'\n                />\n            </Form.Group>\n            <Form.Group >\n                <Form.Field\n                    id='form-input-control-last-name'\n                    error={validate('password')}\n                    control={Input}\n                    value={formState['password']}\n                    onChange={e => setFormState({password: e.target.value})}\n                    label='password'\n                    placeholder='password'\n                />\n            </Form.Group>\n            <Form.Field>\n                <Form.Checkbox\n                    error={{\n                        content: 'You must agree to the terms and conditions',\n                        pointing: 'left'\n                    }}\n                    label='I agree to the Terms and Conditions'\n                />\n            </Form.Field>\n            <Form.Button onClick={() => validate(formState)} content='Submit'/>\n        </Form>\n    )\n}\n\nexport default RegisterForm"]},"metadata":{},"sourceType":"module"}