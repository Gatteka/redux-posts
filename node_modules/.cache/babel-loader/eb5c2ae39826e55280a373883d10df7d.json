{"ast":null,"code":"import _slicedToArray from \"/var/www/reactapps/testing-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/var/www/reactapps/testing-app/src/components/Form.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { sendForm, showForm, updatePost } from '../actions';\nimport { Form as AreaForm, TextArea } from 'semantic-ui-react'; //return main form with various buttons\n\nfunction Form({\n  dispatch,\n  status = {\n    enabled: false\n  }\n}) {\n  console.log('__FORM____'); // const [title, setTitle] = useState(\"\");\n  // const [text, setText] = useState(\"\");\n\n  let titleValue = null;\n  let textValue = null; // const [title, setTitle] = useState(\"\");\n  // const [text, setText] = useState(\"\");\n\n  if (status.optionalState) {\n    titleValue = status.optionalState.title;\n    textValue = status.optionalState.text;\n\n    const _useState = useState(status.optionalState.title),\n          _useState2 = _slicedToArray(_useState, 2),\n          title = _useState2[0],\n          setTitle = _useState2[1];\n\n    const _useState3 = useState(status.optionalState.text),\n          _useState4 = _slicedToArray(_useState3, 2),\n          text = _useState4[0],\n          setText = _useState4[1];\n\n    return;\n  }\n\n  console.log(status);\n  console.log(status.optionalState);\n  return React.createElement(\"div\", {\n    className: 'ui segment' + \" \" + (status.enabled ? 'normal' : 'hidden'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Post title\"), React.createElement(\"div\", {\n    className: 'ui input',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: 'input',\n    value: titleValue,\n    onChange: e => setTitle(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Post data\"), React.createElement(AreaForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(TextArea, {\n    placeholder: \"Tell us more\",\n    value: textValue,\n    onChange: e => setText(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(CurrentButton, {\n    dispatch: dispatch,\n    status: status,\n    title: title,\n    text: text,\n    optionalState: status.optionalState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })));\n} // return 'Create Post' or 'Update post' buttons in form\n\n\nfunction CurrentButton({\n  dispatch,\n  status,\n  title,\n  text,\n  optionalState\n}) {\n  if (status && status.elementAction === 'create') {\n    return React.createElement(\"button\", {\n      type: \"submit\",\n      className: 'ui primary button',\n      onClick: e => {\n        e.preventDefault();\n        dispatch(sendForm(title, text));\n        dispatch(showForm(status.showElement));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Create Post\");\n  }\n\n  return React.createElement(\"button\", {\n    type: \"submit\",\n    className: 'ui primary button',\n    onClick: e => {\n      e.preventDefault();\n      dispatch(updatePost(optionalState)); // dispatch(updatePost(title, area));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Update Post\");\n}\n\nexport default connect()(Form);","map":{"version":3,"sources":["/var/www/reactapps/testing-app/src/components/Form.js"],"names":["React","useState","connect","sendForm","showForm","updatePost","Form","AreaForm","TextArea","dispatch","status","enabled","console","log","titleValue","textValue","optionalState","title","text","setTitle","setText","e","target","value","CurrentButton","elementAction","preventDefault","showElement"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {connect} from 'react-redux'\nimport {sendForm, showForm, updatePost} from '../actions'\nimport {Form as AreaForm, TextArea} from 'semantic-ui-react'\n\n\n//return main form with various buttons\nfunction Form({dispatch, status = {enabled: false }}) {\n    console.log('__FORM____');\n    // const [title, setTitle] = useState(\"\");\n    // const [text, setText] = useState(\"\");\n    let titleValue = null;\n    let textValue = null;\n    // const [title, setTitle] = useState(\"\");\n    // const [text, setText] = useState(\"\");\n    if (status.optionalState) {\n         titleValue = status.optionalState.title;\n         textValue = status.optionalState.text;\n        const [title, setTitle] = useState(status.optionalState.title);\n        const [text, setText] = useState(status.optionalState.text);\n        return;\n    }\n    console.log(status);\n    console.log(status.optionalState);\n    return (\n        <div className={'ui segment' + \" \" + (status.enabled ? 'normal' : 'hidden')}>\n            <p>Post title</p>\n            <div className={'ui input'}>\n                <input className={'input'} value={titleValue} onChange={e => setTitle(e.target.value)}/>\n            </div>\n            <p>Post data</p>\n            <AreaForm>\n                <TextArea placeholder='Tell us more' value={textValue} onChange={e => setText(e.target.value)}/>\n            </AreaForm>\n\n            <div>\n                <CurrentButton\n                    dispatch={dispatch}\n                    status={status}\n                    title={title}\n                    text={text}\n                    optionalState={status.optionalState}\n                />\n            </div>\n        </div>\n    );\n}\n\n// return 'Create Post' or 'Update post' buttons in form\nfunction CurrentButton({dispatch, status, title, text, optionalState}) {\n    if (status && status.elementAction === 'create') {\n        return (\n            <button\n                type=\"submit\"\n                className={'ui primary button'}\n                onClick={ e => {\n                    e.preventDefault();\n                    dispatch(sendForm(title, text));\n                    dispatch(showForm(status.showElement));\n                }}>\n                Create Post\n            </button>\n        );\n    }\n    return (\n        <button\n            type=\"submit\"\n            className={'ui primary button'}\n            onClick={ e => {\n                e.preventDefault();\n                dispatch(updatePost(optionalState));\n                // dispatch(updatePost(title, area));\n            }}>\n            Update Post\n        </button>\n    );\n}\n\nexport default connect()(Form)"]},"metadata":{},"sourceType":"module"}