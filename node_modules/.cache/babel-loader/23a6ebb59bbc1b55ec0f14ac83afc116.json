{"ast":null,"code":"import { connect } from 'react-redux';\nimport { showForm } from '../../actions';\nimport Button from '../../components/Buttons/Button';\n\nconst mapStateToProps = (state, ownProps) => ({\n  showElement: ownProps.showElement,\n  action: ownProps.action,\n  enabled: formState(state, ownProps)\n});\n\nfunction formState(state, ownProps) {\n  let formState = state.form.filter(b => b.showElement === ownProps.showElement).pop();\n\n  if (!formState) {\n    return;\n  }\n\n  return formState.enabled;\n}\n/** mapDispatchToProps\n * adds event to our prop. We can use it from Button component as well. */\n// const mapDispatchToProps = (dispatch, ownProps) => ({\n//     onClick: () => dispatch(showForm(ownProps.showElement))\n// });\n\n\nexport default connect(mapStateToProps // mapDispatchToProps\n)(Button);","map":{"version":3,"sources":["/var/www/reactapps/testing-app-refactoring/src/containers/Buttons/Button.js"],"names":["connect","showForm","Button","mapStateToProps","state","ownProps","showElement","action","enabled","formState","form","filter","b","pop"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,QAAuB,eAAvB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;;AAGA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC1CC,EAAAA,WAAW,EAAED,QAAQ,CAACC,WADoB;AAE1CC,EAAAA,MAAM,EAAEF,QAAQ,CAACE,MAFyB;AAG1CC,EAAAA,OAAO,EAAEC,SAAS,CAACL,KAAD,EAAQC,QAAR;AAHwB,CAAtB,CAAxB;;AAMA,SAASI,SAAT,CAAmBL,KAAnB,EAA0BC,QAA1B,EAAoC;AAChC,MAAII,SAAS,GAAGL,KAAK,CAACM,IAAN,CAAWC,MAAX,CAAkBC,CAAC,IAAIA,CAAC,CAACN,WAAF,KAAkBD,QAAQ,CAACC,WAAlD,EAA+DO,GAA/D,EAAhB;;AACA,MAAI,CAACJ,SAAL,EAAgB;AACZ;AACH;;AACD,SAAOA,SAAS,CAACD,OAAjB;AACH;AAED;;AAGA;AACA;AACA;;;AAEA,eAAeR,OAAO,CAClBG,eADkB,CAElB;AAFkB,CAAP,CAGbD,MAHa,CAAf","sourcesContent":["import {connect} from 'react-redux'\nimport {showForm} from '../../actions'\nimport Button from '../../components/Buttons/Button'\n\n\nconst mapStateToProps = (state, ownProps) => ({\n    showElement: ownProps.showElement,\n    action: ownProps.action,\n    enabled: formState(state, ownProps)\n});\n\nfunction formState(state, ownProps) {\n    let formState = state.form.filter(b => b.showElement === ownProps.showElement).pop();\n    if (!formState) {\n        return\n    }\n    return formState.enabled\n}\n\n/** mapDispatchToProps\n * adds event to our prop. We can use it from Button component as well. */\n\n// const mapDispatchToProps = (dispatch, ownProps) => ({\n//     onClick: () => dispatch(showForm(ownProps.showElement))\n// });\n\nexport default connect(\n    mapStateToProps,\n    // mapDispatchToProps\n)(Button)"]},"metadata":{},"sourceType":"module"}