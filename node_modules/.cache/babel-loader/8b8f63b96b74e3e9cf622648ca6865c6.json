{"ast":null,"code":"import _slicedToArray from \"/var/www/reactapps/testing-app-refactoring/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/var/www/reactapps/testing-app-refactoring/src/components/pages/StartPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Button as UiButton, Confirm } from 'semantic-ui-react';\n\nfunction StartPage() {\n  state = {\n    open: false,\n    result: 'show the modal to capture a result'\n  };\n\n  show = () => this.setState({\n    open: true\n  });\n\n  handleConfirm = () => this.setState({\n    result: 'confirmed',\n    open: false\n  });\n\n  handleCancel = () => this.setState({\n    result: 'cancelled',\n    open: false\n  });\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        open = _useState2[0],\n        setOpen = _useState2[1];\n\n  const _useState3 = useState('show the modal to capture a result'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        result = _useState4[0],\n        setResult = _useState4[1];\n\n  const _useState5 = useState({\n    open,\n    result\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        state = _useState6[0],\n        setState = _useState6[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Result: \", React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, result)), React.createElement(UiButton, {\n    onClick: this.show,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Show\"), React.createElement(Confirm, {\n    open: open,\n    content: \"This is a custom message\",\n    onCancel: setState([false, 'cancel']),\n    onConfirm: setState([false, 'confirm']),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }));\n}\n\nexport default StartPage;","map":{"version":3,"sources":["/var/www/reactapps/testing-app-refactoring/src/components/pages/StartPage.js"],"names":["React","useState","useEffect","Button","UiButton","Confirm","StartPage","state","open","result","show","setState","handleConfirm","handleCancel","setOpen","setResult"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,MAAM,IAAIC,QAAnB,EAA6BC,OAA7B,QAA4C,mBAA5C;;AAEA,SAASC,SAAT,GAAsB;AAClBC,EAAAA,KAAK,GAAG;AAAEC,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,MAAM,EAAE;AAAvB,GAAR;;AAEAC,EAAAA,IAAI,GAAG,MAAM,KAAKC,QAAL,CAAc;AAAEH,IAAAA,IAAI,EAAE;AAAR,GAAd,CAAb;;AACAI,EAAAA,aAAa,GAAG,MAAM,KAAKD,QAAL,CAAc;AAAEF,IAAAA,MAAM,EAAE,WAAV;AAAuBD,IAAAA,IAAI,EAAE;AAA7B,GAAd,CAAtB;;AACAK,EAAAA,YAAY,GAAG,MAAM,KAAKF,QAAL,CAAc;AAAEF,IAAAA,MAAM,EAAE,WAAV;AAAuBD,IAAAA,IAAI,EAAE;AAA7B,GAAd,CAArB;;AALkB,oBAMMP,QAAQ,CAAC,KAAD,CANd;AAAA;AAAA,QAMXO,IANW;AAAA,QAMLM,OANK;;AAAA,qBAOUb,QAAQ,CAAC,oCAAD,CAPlB;AAAA;AAAA,QAOXQ,MAPW;AAAA,QAOHM,SAPG;;AAAA,qBAQQd,QAAQ,CAAC;AAACO,IAAAA,IAAD;AAAMC,IAAAA;AAAN,GAAD,CARhB;AAAA;AAAA,QAQXF,KARW;AAAA,QAQJI,QARI;;AASlB,SACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,MAAL,CADZ,CADJ,EAII,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE,KAAKC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,EAKI,oBAAC,OAAD;AACI,IAAA,IAAI,EAAEF,IADV;AAEI,IAAA,OAAO,EAAC,0BAFZ;AAGI,IAAA,QAAQ,EAAEG,QAAQ,CAAC,CAAC,KAAD,EAAQ,QAAR,CAAD,CAHtB;AAII,IAAA,SAAS,EAAEA,QAAQ,CAAC,CAAC,KAAD,EAAQ,SAAR,CAAD,CAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADR;AAeH;;AAED,eAAeL,SAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { Button as UiButton, Confirm } from 'semantic-ui-react'\n\nfunction StartPage () {\n    state = { open: false, result: 'show the modal to capture a result' };\n\n    show = () => this.setState({ open: true });\n    handleConfirm = () => this.setState({ result: 'confirmed', open: false });\n    handleCancel = () => this.setState({ result: 'cancelled', open: false });\n    const [open, setOpen] = useState(false);\n    const [result, setResult] = useState('show the modal to capture a result');\n    const [state, setState] = useState({open,result});\n    return (\n            <div>\n                <p>\n                    Result: <em>{result}</em>\n                </p>\n                <UiButton onClick={this.show}>Show</UiButton>\n                <Confirm\n                    open={open}\n                    content='This is a custom message'\n                    onCancel={setState([false ,'cancel'])}\n                    onConfirm={setState([false ,'confirm'])}\n                />\n            </div>\n        )\n\n}\n\nexport default StartPage"]},"metadata":{},"sourceType":"module"}