{"ast":null,"code":"import _slicedToArray from \"/var/www/reactapps/testing-app-refactoring/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/var/www/reactapps/testing-app-refactoring/src/components/pages/StartPage.js\";\nimport React, { useState } from 'react';\nimport { Button as UiButton, Modal, Confirm as PopUp } from 'semantic-ui-react';\nimport RegisterForm from './RegisterForm';\n\nfunction StartPage() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        open = _useState2[0],\n        setOpen = _useState2[1];\n\n  const _useState3 = useState('show the modal to capture a result'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        result = _useState4[0],\n        setResult = _useState4[1];\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: 'ui segment',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Result: \", React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, result)), React.createElement(UiButton, {\n    onClick: () => setOpen('true'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Login\"), React.createElement(UiButton, {\n    onClick: () => setOpen('true'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Register\"), React.createElement(Modal, {\n    open: open,\n    onOpen: this.open,\n    onClose: this.close,\n    size: \"small\",\n    trigger: React.createElement(UiButton, {\n      primary: true,\n      icon: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Proceed\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Modal #2\"), React.createElement(Modal.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"That's everything!\")), React.createElement(Modal.Actions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(UiButton, {\n    icon: \"check\",\n    content: \"All Done\",\n    onClick: this.close,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })))));\n}\n\nexport default StartPage;","map":{"version":3,"sources":["/var/www/reactapps/testing-app-refactoring/src/components/pages/StartPage.js"],"names":["React","useState","Button","UiButton","Modal","Confirm","PopUp","RegisterForm","StartPage","open","setOpen","result","setResult","close"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,MAAM,IAAIC,QAAnB,EAA6BC,KAA7B,EAAoCC,OAAO,IAAIC,KAA/C,QAA4D,mBAA5D;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,SAASC,SAAT,GAAsB;AAAA,oBACMP,QAAQ,CAAC,KAAD,CADd;AAAA;AAAA,QACXQ,IADW;AAAA,QACLC,OADK;;AAAA,qBAEUT,QAAQ,CAAC,oCAAD,CAFlB;AAAA;AAAA,QAEXU,MAFW;AAAA,QAEHC,SAFG;;AAIlB,SACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,MAAL,CADZ,CADR,EAIQ,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE,MAAMD,OAAO,CAAC,MAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJR,EAKQ,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,MAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALR,EAQI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAED,IADV;AAEI,IAAA,MAAM,EAAE,KAAKA,IAFjB;AAGI,IAAA,OAAO,EAAE,KAAKI,KAHlB;AAII,IAAA,IAAI,EAAC,OAJT;AAKI,IAAA,OAAO,EACH,oBAAC,QAAD;AAAU,MAAA,OAAO,MAAjB;AAAkB,MAAA,IAAI,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ,EAYI,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CAZJ,EAeI,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,OAAf;AAAuB,IAAA,OAAO,EAAC,UAA/B;AAA0C,IAAA,OAAO,EAAE,KAAKA,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAfJ,CARJ,CADA,CADJ;AA4CH;;AAED,eAAeL,SAAf","sourcesContent":["import React, {useState} from 'react'\nimport { Button as UiButton, Modal, Confirm as PopUp } from 'semantic-ui-react'\nimport RegisterForm from './RegisterForm'\n\nfunction StartPage () {\n    const [open, setOpen] = useState(false);\n    const [result, setResult] = useState('show the modal to capture a result');\n\n    return (\n        <div className=\"App\">\n        <div className={'ui segment'}>\n                <p>\n                    Result: <em>{result}</em>\n                </p>\n                <UiButton onClick={() => setOpen('true')}>Login</UiButton>\n                <UiButton onClick={() => setOpen('true')}>Register</UiButton>\n\n\n            <Modal\n                open={open}\n                onOpen={this.open}\n                onClose={this.close}\n                size='small'\n                trigger={\n                    <UiButton primary icon>\n                        Proceed\n                    </UiButton>\n                }\n            >\n                <Modal.Header>Modal #2</Modal.Header>\n                <Modal.Content>\n                    <p>That's everything!</p>\n                </Modal.Content>\n                <Modal.Actions>\n                    <UiButton icon='check' content='All Done' onClick={this.close} />\n                </Modal.Actions>\n            </Modal>\n\n\n\n\n                {/*<PopUp*/}\n                {/*    open= {open}*/}\n                {/*    content= {<RegisterForm/>}*/}\n                {/*    confirmButton= {false}*/}\n                {/*    cancelButton='Close'*/}\n                {/*    onCancel={() => {setResult('cancel');setOpen(false)}}*/}\n                {/*/>*/}\n            </div>\n        </div>\n        )\n\n}\n\nexport default StartPage"]},"metadata":{},"sourceType":"module"}