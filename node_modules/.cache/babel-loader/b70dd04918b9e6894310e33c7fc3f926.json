{"ast":null,"code":"import { connect } from 'react-redux';\nimport Button from '../../components/Buttons/Button';\n\nconst mapStateToProps = (state, ownProps) => ({\n  showElement: ownProps.showElement,\n  action: ownProps.action,\n  result: formState(state, ownProps.showElement) ? \"Hide Form\" : \"Show Form\"\n});\n\nfunction formState(state, searchedElement) {\n  let formState = state.form.filter(v => v.showElement === searchedElement).pop();\n\n  if (!formState) {\n    return false;\n  }\n\n  return formState.enabled;\n}\n/** mapDispatchToProps\n * adds event to our prop. We can use it from Button component as well. */\n\n\nexport default connect(mapStateToProps)(Button);","map":{"version":3,"sources":["/var/www/reactapps/testing-app-refactoring/src/containers/Buttons/Button.js"],"names":["connect","Button","mapStateToProps","state","ownProps","showElement","action","result","formState","searchedElement","form","filter","v","pop","enabled"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;;AAGA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC1CC,EAAAA,WAAW,EAAED,QAAQ,CAACC,WADoB;AAE1CC,EAAAA,MAAM,EAAEF,QAAQ,CAACE,MAFyB;AAG1CC,EAAAA,MAAM,EAAEC,SAAS,CAACL,KAAD,EAAQC,QAAQ,CAACC,WAAjB,CAAT,GAAyC,WAAzC,GAAsD;AAHpB,CAAtB,CAAxB;;AAMA,SAASG,SAAT,CAAmBL,KAAnB,EAA0BM,eAA1B,EAA2C;AACvC,MAAID,SAAS,GAAGL,KAAK,CAACO,IAAN,CAAWC,MAAX,CAAkBC,CAAC,IAAIA,CAAC,CAACP,WAAF,KAAkBI,eAAzC,EAA0DI,GAA1D,EAAhB;;AACA,MAAI,CAACL,SAAL,EAAgB;AACZ,WAAO,KAAP;AACH;;AACD,SAAOA,SAAS,CAACM,OAAjB;AACH;AAED;;;;AAGA,eAAed,OAAO,CAClBE,eADkB,CAAP,CAEbD,MAFa,CAAf","sourcesContent":["import {connect} from 'react-redux'\nimport Button from '../../components/Buttons/Button'\n\n\nconst mapStateToProps = (state, ownProps) => ({\n    showElement: ownProps.showElement,\n    action: ownProps.action,\n    result: formState(state, ownProps.showElement) ? \"Hide Form\": \"Show Form\"\n});\n\nfunction formState(state, searchedElement) {\n    let formState = state.form.filter(v => v.showElement === searchedElement).pop();\n    if (!formState) {\n        return false;\n    }\n    return formState.enabled\n}\n\n/** mapDispatchToProps\n * adds event to our prop. We can use it from Button component as well. */\n\nexport default connect(\n    mapStateToProps,\n)(Button)"]},"metadata":{},"sourceType":"module"}