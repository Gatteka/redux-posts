{"ast":null,"code":"import _slicedToArray from \"/var/www/reactapps/testing-app-refactoring/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/var/www/reactapps/testing-app-refactoring/src/components/pages/RegisterForm.js\";\nimport React, { useState } from 'react';\nimport { Form, Input } from 'semantic-ui-react';\nimport { Link } from \"react-router-dom\";\n/**\n * Registration/Login Form\n */\n\nfunction RegisterForm() {\n  const fields = {\n    firstName: 'firstName',\n    lastName: 'lastName',\n    password: 'password',\n    terms: 'terms',\n    email: 'email'\n  };\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        formState = _useState2[0],\n        setFormState = _useState2[1]; //const [checkboxAccepted, setCheckboxAccepted] = useState(false);\n\n\n  console.log(formState);\n\n  function addValue(key, value) {\n    setFormState([...formState.filter(el => el.key !== key), {\n      key: key,\n      value: value,\n      error: retrieveErrors(key, value)\n    }]); //   console.log(formState);\n  }\n\n  function hasErrors(key) {\n    let element = formState.filter(el => el.key === key).pop();\n    if (element) return element.error;\n  }\n\n  function submitForm(e) {\n    for (let field in fields) {\n      console.log(formState.filter(el => el.key === field).value);\n      console.log(formState.filter(el => el.key === field));\n      console.log(formState);\n      let elem = formState.filter(el => el.key === field);\n      addValue(field, elem ? elem.value : 0);\n    } // var errors = [];\n    // for(let field in fields){\n    //     let x = 4;\n    //     console.log(formState.filter(el => el.key === field).length);\n    //     if((formState.filter(el => el.key === field)).length < 1){\n    //     console.log(formState.filter(el => el.key === field));\n    //     console.log(!formState.filter(el => el.key === field));\n    //\n    //         setFormState(\n    //             [...formState.filter(el => el.key !== field),\n    //                 {\n    //                     key: field,\n    //                     value: '',\n    //                     error: {\n    //                         content: 'this is required field',\n    //                         pointing: 'left'\n    //                     }\n    //                 }\n    //             ]\n    //         );\n    //     }\n    //\n    //     errors.push(!hasErrors(field));\n    // }\n    // console.log(errors);\n    // window.location.href = \"/mainPage\";\n\n  }\n\n  function retrieveErrors(key, value) {\n    if (!value || value.length < 1) {\n      return {\n        content: 'this is required field',\n        pointing: 'left'\n      };\n    }\n\n    switch (key) {\n      case fields.firstName:\n        if (value.length < 5) {\n          return {\n            content: 'Not enough characters',\n            pointing: 'left'\n          };\n        }\n\n        return false;\n\n      case fields.lastName:\n        if (value.length < 2) {\n          return {\n            content: 'Not enough characters',\n            pointing: 'left'\n          };\n        }\n\n        return false;\n\n      case fields.password:\n        if (value.length < 4) {\n          return {\n            content: 'Not enough characters',\n            pointing: 'left'\n          };\n        }\n\n        return false;\n\n      case fields.terms:\n        if (!value) {\n          return {\n            content: 'You must agree to the terms and conditions',\n            pointing: 'left'\n          };\n        }\n\n        return false;\n\n      case fields.email:\n        if (!value.match('^([a-z0-9_-]+\\\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\\\.[a-z0-9_-]+)*\\\\.[a-z]{2,6}$')) {\n          return {\n            content: 'Incorrect email address',\n            pointing: 'left'\n          };\n        }\n\n        return false;\n\n      default:\n        return false;\n    }\n  } // console.log(formState);\n\n\n  return React.createElement(Form, {\n    id: 'register-ui-form',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    widths: \"equal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    id: \"form-input-control-first-name\",\n    control: Input,\n    width: 8,\n    error: hasErrors(fields.firstName),\n    onChange: e => addValue(fields.firstName, e.target.value),\n    label: \"First name\",\n    placeholder: \"First name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), React.createElement(Form.Field, {\n    id: \"form-input-control-last-name\",\n    error: hasErrors(fields.lastName),\n    control: Input,\n    width: 8,\n    onChange: e => addValue(fields.lastName, e.target.value),\n    label: \"Last name\",\n    placeholder: \"Last name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    id: \"form-input-control-last-name\",\n    error: hasErrors('password'),\n    control: Input,\n    width: 8,\n    onChange: e => addValue('password', e.target.value),\n    label: \"Password\",\n    type: \"password\",\n    placeholder: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }), React.createElement(Form.Field, {\n    id: \"form-input-control-last-name\",\n    error: hasErrors('email'),\n    control: Input,\n    width: 8,\n    onChange: e => addValue('email', e.target.value),\n    label: \"Email address\",\n    type: \"email\",\n    placeholder: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(Form.Checkbox, {\n    onClick: (e, {\n      checked\n    }) => addValue(fields.terms, checked),\n    error: hasErrors(fields.terms),\n    label: \"I agree to the Terms and Conditions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  })), React.createElement(Form.Button, {\n    content: \"Submit\",\n    onClick: e => submitForm(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }));\n}\n\nexport default RegisterForm;","map":{"version":3,"sources":["/var/www/reactapps/testing-app-refactoring/src/components/pages/RegisterForm.js"],"names":["React","useState","Form","Input","Link","RegisterForm","fields","firstName","lastName","password","terms","email","formState","setFormState","console","log","addValue","key","value","filter","el","error","retrieveErrors","hasErrors","element","pop","submitForm","e","field","elem","length","content","pointing","match","target","checked"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {Form, Input} from 'semantic-ui-react'\nimport {Link} from \"react-router-dom\";\n\n/**\n * Registration/Login Form\n */\nfunction RegisterForm() {\n\n    const fields = {\n        firstName: 'firstName',\n        lastName: 'lastName',\n        password: 'password',\n        terms: 'terms',\n        email: 'email'\n    };\n\n    const [formState, setFormState] = useState([]);\n    //const [checkboxAccepted, setCheckboxAccepted] = useState(false);\n\n    console.log(formState);\n\n    function addValue(key, value) {\n        setFormState(\n            [...formState.filter(el => el.key !== key),\n                {\n                    key: key,\n                    value: value,\n                    error: retrieveErrors(key, value)\n                }\n            ]\n        );\n     //   console.log(formState);\n    }\n\n    function hasErrors(key) {\n        let element = formState.filter(el => el.key === key).pop();\n        if (element) return element.error;\n\n    }\n\n    function submitForm(e) {\n        for (let field in fields) {\n            console.log(formState.filter(el => el.key === field).value);\n            console.log(formState.filter(el => el.key === field));\n            console.log(formState);\n            let elem = formState.filter(el => el.key === field);\n            addValue(field, elem ? elem.value: 0)\n        }\n        // var errors = [];\n        // for(let field in fields){\n        //     let x = 4;\n        //     console.log(formState.filter(el => el.key === field).length);\n        //     if((formState.filter(el => el.key === field)).length < 1){\n        //     console.log(formState.filter(el => el.key === field));\n        //     console.log(!formState.filter(el => el.key === field));\n        //\n        //         setFormState(\n        //             [...formState.filter(el => el.key !== field),\n        //                 {\n        //                     key: field,\n        //                     value: '',\n        //                     error: {\n        //                         content: 'this is required field',\n        //                         pointing: 'left'\n        //                     }\n        //                 }\n        //             ]\n        //         );\n        //     }\n        //\n        //     errors.push(!hasErrors(field));\n        // }\n        // console.log(errors);\n        // window.location.href = \"/mainPage\";\n    }\n\n    function retrieveErrors(key, value) {\n        if (!value || value.length < 1) {\n            return {\n                content: 'this is required field',\n                pointing: 'left'\n            };\n        }\n        switch (key) {\n            case fields.firstName:\n                if (value.length < 5) {\n                    return {\n                        content: 'Not enough characters',\n                        pointing: 'left'\n                    };\n                }\n                return false;\n            case fields.lastName:\n                if (value.length < 2) {\n                    return {\n                        content: 'Not enough characters',\n                        pointing: 'left'\n                    };\n                }\n                return false;\n            case fields.password:\n                if (value.length < 4) {\n                    return {\n                        content: 'Not enough characters',\n                        pointing: 'left'\n                    };\n                }\n                return false;\n            case fields.terms:\n                if (!value) {\n                    return {\n                        content: 'You must agree to the terms and conditions',\n                        pointing: 'left'\n                    };\n                }\n                return false;\n            case fields.email:\n                if (!value.match('^([a-z0-9_-]+\\\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\\\.[a-z0-9_-]+)*\\\\.[a-z]{2,6}$')) {\n                    return {\n                        content: 'Incorrect email address',\n                        pointing: 'left'\n                    };\n                }\n                return false;\n            default:\n                return false\n        }\n    }\n\n    // console.log(formState);\n\n    return (\n        <Form id={'register-ui-form'}>\n            <Form.Group widths='equal'>\n                <Form.Field\n                    id='form-input-control-first-name'\n                    control={Input}\n                    width={8}\n                    error={hasErrors(fields.firstName)}\n                    onChange={e => addValue(fields.firstName, e.target.value)}\n                    label='First name'\n                    placeholder='First name'\n                />\n                <Form.Field\n                    id='form-input-control-last-name'\n                    error={hasErrors(fields.lastName)}\n                    control={Input}\n                    width={8}\n                    onChange={e => addValue(fields.lastName, e.target.value)}\n                    label='Last name'\n                    placeholder='Last name'\n                />\n            </Form.Group>\n            <Form.Group>\n                <Form.Field\n                    id='form-input-control-last-name'\n                    error={hasErrors('password')}\n                    control={Input}\n                    width={8}\n                    onChange={e => addValue('password', e.target.value)}\n                    label='Password'\n                    type='password'\n                    placeholder='password'\n                />\n                <Form.Field\n                    id='form-input-control-last-name'\n                    error={hasErrors('email')}\n                    control={Input}\n                    width={8}\n                    onChange={e => addValue('email', e.target.value)}\n                    label='Email address'\n                    type='email'\n                    placeholder='email'\n                />\n            </Form.Group>\n            <Form.Field>\n                <Form.Checkbox\n                    onClick={(e, {checked}) => addValue(fields.terms, checked)}\n                    error={hasErrors(fields.terms)}\n                    label='I agree to the Terms and Conditions'\n                />\n            </Form.Field>\n            {/*<Link to=\"/mainPage\">*/}\n            <Form.Button\n                content='Submit'\n                onClick={e => submitForm(e)}\n            />\n            {/*<Button*/}\n            {/*</Link>*/}\n        </Form>\n    )\n}\n\nexport default RegisterForm"]},"metadata":{},"sourceType":"module"}