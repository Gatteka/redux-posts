{"ast":null,"code":"import { connect } from 'react-redux';\nimport { deletePost, sendForm, showForm, showUpdateForm } from '../../actions';\nimport Button from '../../components/Buttons/Button';\n\nconst mapStateToProps = (state, ownProps) => ({\n  showElement: ownProps.showElement,\n  action: ownProps.action,\n  result: formState(state, ownProps.showElement) ? \"Hide Form\" : \"Show Form\"\n});\n\nfunction formState(state, searchedFormElement) {\n  let formState = state.form.filter(v => v.showElement === searchedFormElement).pop();\n\n  if (!formState) {\n    return false;\n  }\n\n  return formState.enabled;\n}\n/** mapDispatchToProps\n * adds event to our prop. We can use it from Button component as well. */\n// const mapDispatchToProps = (dispatch, ownProps) => ({\n//     onClick: () => dispatch(ownProps.action)\n// });\n\n\nfunction mapDispatchToProps(dispatch, ownProps) {\n  return {\n    onClick: function (ownProps) {\n      let action = ownProps.action;\n\n      switch (action) {\n        case 'showForm':\n          return dispatch(showForm(ownProps.showElement));\n\n        case 'sendForm':\n          return dispatch(sendForm(ownProps.title, ownProps.text));\n\n        case 'deletePost':\n          return dispatch(deletePost(ownProps.postId));\n\n        case 'showUpdateForm':\n          return dispatch(showUpdateForm(id, title, text));\n      }\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Button);","map":{"version":3,"sources":["/var/www/reactapps/testing-app-refactoring/src/containers/Buttons/Button.js"],"names":["connect","deletePost","sendForm","showForm","showUpdateForm","Button","mapStateToProps","state","ownProps","showElement","action","result","formState","searchedFormElement","form","filter","v","pop","enabled","mapDispatchToProps","dispatch","onClick","title","text","postId","id"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,EAAoBC,QAApB,EAA8BC,QAA9B,EAAwCC,cAAxC,QAA6D,eAA7D;AACA,OAAOC,MAAP,MAAmB,iCAAnB;;AAGA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC1CC,EAAAA,WAAW,EAAED,QAAQ,CAACC,WADoB;AAE1CC,EAAAA,MAAM,EAAEF,QAAQ,CAACE,MAFyB;AAG1CC,EAAAA,MAAM,EAAEC,SAAS,CAACL,KAAD,EAAQC,QAAQ,CAACC,WAAjB,CAAT,GAAyC,WAAzC,GAAsD;AAHpB,CAAtB,CAAxB;;AAMA,SAASG,SAAT,CAAmBL,KAAnB,EAA0BM,mBAA1B,EAA+C;AAC3C,MAAID,SAAS,GAAGL,KAAK,CAACO,IAAN,CAAWC,MAAX,CAAkBC,CAAC,IAAIA,CAAC,CAACP,WAAF,KAAkBI,mBAAzC,EAA8DI,GAA9D,EAAhB;;AACA,MAAI,CAACL,SAAL,EAAgB;AACZ,WAAO,KAAP;AACH;;AACD,SAAOA,SAAS,CAACM,OAAjB;AACH;AAED;;AAEA;AACA;AACA;;;AAEA,SAASC,kBAAT,CAA4BC,QAA5B,EAAsCZ,QAAtC,EAAgD;AAC5C,SAAO;AACHa,IAAAA,OAAO,EAAE,UAAUb,QAAV,EAAoB;AACzB,UAAIE,MAAM,GAAGF,QAAQ,CAACE,MAAtB;;AACD,cAAQA,MAAR;AACI,aAAK,UAAL;AAAiB,iBAAQU,QAAQ,CAACjB,QAAQ,CAACK,QAAQ,CAACC,WAAV,CAAT,CAAhB;;AACjB,aAAK,UAAL;AAAiB,iBAAQW,QAAQ,CAAClB,QAAQ,CAACM,QAAQ,CAACc,KAAV,EAAiBd,QAAQ,CAACe,IAA1B,CAAT,CAAhB;;AACjB,aAAK,YAAL;AAAmB,iBAAQH,QAAQ,CAACnB,UAAU,CAACO,QAAQ,CAACgB,MAAV,CAAX,CAAhB;;AACnB,aAAK,gBAAL;AAAuB,iBAAQJ,QAAQ,CAAChB,cAAc,CAACqB,EAAD,EAAKH,KAAL,EAAYC,IAAZ,CAAf,CAAhB;AAJ3B;AAOF;AAVE,GAAP;AAYH;;AAED,eAAevB,OAAO,CAClBM,eADkB,EAElBa,kBAFkB,CAAP,CAGbd,MAHa,CAAf","sourcesContent":["import {connect} from 'react-redux'\nimport {deletePost, sendForm, showForm, showUpdateForm} from '../../actions'\nimport Button from '../../components/Buttons/Button'\n\n\nconst mapStateToProps = (state, ownProps) => ({\n    showElement: ownProps.showElement,\n    action: ownProps.action,\n    result: formState(state, ownProps.showElement) ? \"Hide Form\": \"Show Form\",\n});\n\nfunction formState(state, searchedFormElement) {\n    let formState = state.form.filter(v => v.showElement === searchedFormElement).pop();\n    if (!formState) {\n        return false;\n    }\n    return formState.enabled\n}\n\n/** mapDispatchToProps\n * adds event to our prop. We can use it from Button component as well. */\n// const mapDispatchToProps = (dispatch, ownProps) => ({\n//     onClick: () => dispatch(ownProps.action)\n// });\n\nfunction mapDispatchToProps(dispatch, ownProps) {\n    return {\n        onClick: function (ownProps) {\n            let action = ownProps.action;\n           switch (action) {\n               case 'showForm': return  dispatch(showForm(ownProps.showElement));\n               case 'sendForm': return  dispatch(sendForm(ownProps.title, ownProps.text));\n               case 'deletePost': return  dispatch(deletePost(ownProps.postId));\n               case 'showUpdateForm': return  dispatch(showUpdateForm(id, title, text));\n           }\n\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Button)"]},"metadata":{},"sourceType":"module"}