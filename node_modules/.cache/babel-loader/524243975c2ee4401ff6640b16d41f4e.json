{"ast":null,"code":"import _slicedToArray from \"/var/www/reactapps/testing-app-refactoring/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/var/www/reactapps/testing-app-refactoring/src/components/pages/RegisterForm.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Form, Input } from 'semantic-ui-react';\n\nfunction RegisterForm() {\n  // const [validation, setValidation] = useState('');\n  // const [firstName, setFirstName] = useState('');\n  // const [lastName, setLastName] = useState('');\n  // const [password, setPassword] = useState('');\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        formState = _useState2[0],\n        setFormState = _useState2[1]; // useEffect(() => {\n  //     if (!validation) {\n  //         console.log('s');\n  //         return <Component.type {...Component.props} {...extraProps} />;\n  //     }\n  // }, [validation]);\n\n\n  console.log(formState);\n\n  function addValue(key, value) {\n    setFormState(...formState.filter(el => el.name !== key), {\n      key: value,\n      valid: true\n    });\n  } // function validate(formState) {\n  //     if (formState[value]) {\n  //         return formState[value].length > 0 ? false :\n  //          {content: 'required field', pointing: 'left'}\n  //     }\n  //     return false;\n  // }\n\n\n  console.log(formState);\n  return React.createElement(Form, {\n    id: 'register-ui-form',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    widths: \"equal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    id: \"form-input-control-first-name\",\n    control: Input,\n    error: validate('firstName') // value={formState['firstName']}\n    ,\n    onChange: e => addValue('firstName', e.target.value),\n    label: \"First name\",\n    placeholder: \"First name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Form.Field, {\n    id: \"form-input-control-last-name\",\n    error: validate('lastName'),\n    control: Input // value={formState['lastName']}\n    ,\n    onChange: e => addValue('lastName', e.target.value) //onChange={e => validateRegisterForm(lastName, e.target.value)}\n    ,\n    label: \"Last name\",\n    placeholder: \"Last name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    id: \"form-input-control-last-name\",\n    error: validate('password'),\n    control: Input //value={formState['password']}\n    ,\n    onChange: e => addValue('password', e.target.value),\n    label: \"password\",\n    placeholder: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Form.Checkbox, {\n    error: {\n      content: 'You must agree to the terms and conditions',\n      pointing: 'left'\n    },\n    label: \"I agree to the Terms and Conditions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(Form.Button, {\n    onClick: () => validate(formState),\n    content: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }));\n}\n\nexport default RegisterForm;","map":{"version":3,"sources":["/var/www/reactapps/testing-app-refactoring/src/components/pages/RegisterForm.js"],"names":["React","useEffect","useState","Form","Input","RegisterForm","formState","setFormState","console","log","addValue","key","value","filter","el","name","valid","validate","e","target","content","pointing"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {Form, Input} from 'semantic-ui-react'\n\n\nfunction RegisterForm() {\n\n    // const [validation, setValidation] = useState('');\n    // const [firstName, setFirstName] = useState('');\n    // const [lastName, setLastName] = useState('');\n    // const [password, setPassword] = useState('');\n    const [formState, setFormState] = useState([]);\n\n    // useEffect(() => {\n    //     if (!validation) {\n    //         console.log('s');\n    //         return <Component.type {...Component.props} {...extraProps} />;\n    //     }\n    // }, [validation]);\n    console.log(formState);\n    \n    function addValue(key,value) {\n        setFormState(...formState.filter(el => el.name !== key),{key:value,valid:true});\n    }\n\n    // function validate(formState) {\n    //     if (formState[value]) {\n    //         return formState[value].length > 0 ? false :\n    //          {content: 'required field', pointing: 'left'}\n    //     }\n    //     return false;\n    // }\n\n    console.log(formState);\n\n    return (\n        <Form id={'register-ui-form'}>\n            <Form.Group widths='equal'>\n                <Form.Field\n                    id='form-input-control-first-name'\n                    control={Input}\n                    error={validate('firstName')}\n                   // value={formState['firstName']}\n                    onChange={e =>addValue('firstName', e.target.value)}\n                    label='First name'\n                    placeholder='First name'\n                />\n                <Form.Field\n                    id='form-input-control-last-name'\n                    error={validate('lastName')}\n                    control={Input}\n                   // value={formState['lastName']}\n                    onChange={e =>addValue('lastName', e.target.value)}\n                    //onChange={e => validateRegisterForm(lastName, e.target.value)}\n                    label='Last name'\n                    placeholder='Last name'\n                />\n            </Form.Group>\n            <Form.Group >\n                <Form.Field\n                    id='form-input-control-last-name'\n                    error={validate('password')}\n                    control={Input}\n                    //value={formState['password']}\n                    onChange={e =>addValue('password', e.target.value)}\n                    label='password'\n                    placeholder='password'\n                />\n            </Form.Group>\n            <Form.Field>\n                <Form.Checkbox\n                    error={{\n                        content: 'You must agree to the terms and conditions',\n                        pointing: 'left'\n                    }}\n                    label='I agree to the Terms and Conditions'\n                />\n            </Form.Field>\n            <Form.Button onClick={() => validate(formState)} content='Submit'/>\n        </Form>\n    )\n}\n\nexport default RegisterForm"]},"metadata":{},"sourceType":"module"}