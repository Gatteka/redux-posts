{"ast":null,"code":"var _jsxFileName = \"/var/www/reactapps/testing-app-refactoring/src/components/pages/RegisterForm.js\";\nimport React, { useState } from 'react';\nimport { Form, Input } from 'semantic-ui-react';\nimport LoginRegisterValidation from \"../../containers/pages/validation/LoginRegisterValidation\";\n/**\n * Registration/Login Form\n */\n\nfunction RegisterForm(props) {\n  const fields = {\n    firstName: 'firstName',\n    lastName: 'lastName',\n    password: 'password',\n    email: 'email',\n    terms: 'terms'\n  };\n  console.log(props);\n  let validate = LoginRegisterValidation(fields); //\n  //  const [formState, setFormState] = useState([]);\n  //  const [fieldsChecked, setFieldsChecked] = useState(false);\n  //\n  // // console.log(formState);\n  //\n  //\n  //  function addValue(key, value) {\n  //      setFormState(\n  //          [...formState.filter(el => el.key !== key),\n  //              {\n  //                  key: key,\n  //                  value: value,\n  //                  error: retrieveErrors(key, value)\n  //              }\n  //          ]\n  //      );\n  //  }\n  //\n  //  function hasErrors(key) {\n  //      let element = formState.filter(el => el.key === key).pop();\n  //      if (element) return element.error;\n  //\n  //  }\n  //\n  //\n  //  function submitForm() {\n  //      let checking = [];\n  //      for (let field in fields) {\n  //          if (formState.filter(el => el.key === field).length === 0) {\n  //              checking.push({\n  //                  key: field,\n  //                  value: '',\n  //                  error: retrieveErrors(field, 0)\n  //              });\n  //          }\n  //      }\n  //    if(!fieldsChecked) {\n  //        if(checking.filter(el => el.error !== false).length < 1)\n  //        { window.location.href = \"/mainPage\"}\n  //    } else {\n  //        if(formState.filter(el => el.error !== false).length < 1)\n  //        { window.location.href = \"/mainPage\"}\n  //    }\n  //      setFormState([...formState, ...checking]);\n  //      setFieldsChecked(true);\n  //\n  //  }\n  //\n  //  function retrieveErrors(key, value) {\n  //      if (!value || value.length < 1) {\n  //          return {\n  //              content: 'this is required field',\n  //              pointing: 'left'\n  //          };\n  //      }\n  //      switch (key) {\n  //          case fields.firstName:\n  //              if (value.length < 5) {\n  //                  return {\n  //                      content: 'Not enough characters',\n  //                      pointing: 'left'\n  //                  };\n  //              }\n  //              return false;\n  //          case fields.lastName:\n  //              if (value.length < 2) {\n  //                  return {\n  //                      content: 'Not enough characters',\n  //                      pointing: 'left'\n  //                  };\n  //              }\n  //              return false;\n  //          case fields.password:\n  //              if (value.length < 4) {\n  //                  return {\n  //                      content: 'Not enough characters',\n  //                      pointing: 'left'\n  //                  };\n  //              }\n  //              return false;\n  //          case fields.terms:\n  //              if (!value) {\n  //                  return {\n  //                      content: 'You must agree to the terms and conditions',\n  //                      pointing: 'left'\n  //                  };\n  //              }\n  //              return false;\n  //          case fields.email:\n  //              if (!value.match('^([a-z0-9_-]+\\\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\\\.[a-z0-9_-]+)*\\\\.[a-z]{2,6}$')) {\n  //                  return {\n  //                      content: 'Incorrect email address',\n  //                      pointing: 'left'\n  //                  };\n  //              }\n  //              return false;\n  //          default:\n  //              return false\n  //      }\n  //  }\n  // console.log(formState);\n\n  if (props.action === 'register') {\n    return React.createElement(Form, {\n      id: 'register-ui-form',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      id: \"form-input-control-first-name\",\n      control: Input,\n      width: 8,\n      error: validate.hasErrors(fields.firstName),\n      onChange: e => validate.addValue(fields.firstName, e.target.value),\n      label: \"First name\",\n      placeholder: \"First name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      id: \"form-input-control-last-name\",\n      error: validate.hasErrors(fields.lastName),\n      control: Input,\n      width: 8,\n      onChange: e => validate.addValue(fields.lastName, e.target.value),\n      label: \"Last name\",\n      placeholder: \"Last name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      id: \"form-input-control-last-name\",\n      error: validate.hasErrors('password'),\n      control: Input,\n      width: 8,\n      onChange: e => validate.addValue('password', e.target.value),\n      label: \"Password\",\n      type: \"password\",\n      placeholder: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      id: \"form-input-control-last-name\",\n      error: validate.hasErrors('email'),\n      control: Input,\n      width: 8,\n      onChange: e => validate.addValue('email', e.target.value),\n      label: \"Email address\",\n      type: \"email\",\n      placeholder: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Form.Checkbox, {\n      onClick: (e, {\n        checked\n      }) => validate.addValue(fields.terms, checked),\n      error: hasErrors(fields.terms),\n      label: \"I agree to the Terms and Conditions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    })), React.createElement(Form.Button, {\n      content: \"Submit\",\n      onClick: () => validate.submitForm(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(Form, {\n    id: 'register-ui-form',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    id: \"form-input-control-last-name\",\n    error: validate.hasErrors('password'),\n    control: Input,\n    width: 8,\n    onChange: e => validate.addValue('password', e.target.value),\n    label: \"Password\",\n    type: \"password\",\n    placeholder: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }), React.createElement(Form.Field, {\n    id: \"form-input-control-last-name\",\n    error: validate.hasErrors('email'),\n    control: Input,\n    width: 8,\n    onChange: e => validate.addValue('email', e.target.value),\n    label: \"Email address\",\n    type: \"email\",\n    placeholder: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }), React.createElement(Form.Button, {\n    content: \"Submit\",\n    onClick: () => validate.submitForm(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }));\n}\n\nexport default RegisterForm;","map":{"version":3,"sources":["/var/www/reactapps/testing-app-refactoring/src/components/pages/RegisterForm.js"],"names":["React","useState","Form","Input","LoginRegisterValidation","RegisterForm","props","fields","firstName","lastName","password","email","terms","console","log","validate","action","hasErrors","e","addValue","target","value","checked","submitForm"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {Form, Input} from 'semantic-ui-react'\nimport LoginRegisterValidation from \"../../containers/pages/validation/LoginRegisterValidation\";\n/**\n * Registration/Login Form\n */\nfunction RegisterForm(props) {\n\n    const fields = {\n        firstName: 'firstName',\n        lastName: 'lastName',\n        password: 'password',\n        email: 'email',\n        terms: 'terms',\n    };\n\n    console.log(props);\n    let validate = LoginRegisterValidation(fields);\n   //\n   //  const [formState, setFormState] = useState([]);\n   //  const [fieldsChecked, setFieldsChecked] = useState(false);\n   //\n   // // console.log(formState);\n   //\n   //\n   //  function addValue(key, value) {\n   //      setFormState(\n   //          [...formState.filter(el => el.key !== key),\n   //              {\n   //                  key: key,\n   //                  value: value,\n   //                  error: retrieveErrors(key, value)\n   //              }\n   //          ]\n   //      );\n   //  }\n   //\n   //  function hasErrors(key) {\n   //      let element = formState.filter(el => el.key === key).pop();\n   //      if (element) return element.error;\n   //\n   //  }\n   //\n   //\n   //  function submitForm() {\n   //      let checking = [];\n   //      for (let field in fields) {\n   //          if (formState.filter(el => el.key === field).length === 0) {\n   //              checking.push({\n   //                  key: field,\n   //                  value: '',\n   //                  error: retrieveErrors(field, 0)\n   //              });\n   //          }\n   //      }\n   //    if(!fieldsChecked) {\n   //        if(checking.filter(el => el.error !== false).length < 1)\n   //        { window.location.href = \"/mainPage\"}\n   //    } else {\n   //        if(formState.filter(el => el.error !== false).length < 1)\n   //        { window.location.href = \"/mainPage\"}\n   //    }\n   //      setFormState([...formState, ...checking]);\n   //      setFieldsChecked(true);\n   //\n   //  }\n   //\n   //  function retrieveErrors(key, value) {\n   //      if (!value || value.length < 1) {\n   //          return {\n   //              content: 'this is required field',\n   //              pointing: 'left'\n   //          };\n   //      }\n   //      switch (key) {\n   //          case fields.firstName:\n   //              if (value.length < 5) {\n   //                  return {\n   //                      content: 'Not enough characters',\n   //                      pointing: 'left'\n   //                  };\n   //              }\n   //              return false;\n   //          case fields.lastName:\n   //              if (value.length < 2) {\n   //                  return {\n   //                      content: 'Not enough characters',\n   //                      pointing: 'left'\n   //                  };\n   //              }\n   //              return false;\n   //          case fields.password:\n   //              if (value.length < 4) {\n   //                  return {\n   //                      content: 'Not enough characters',\n   //                      pointing: 'left'\n   //                  };\n   //              }\n   //              return false;\n   //          case fields.terms:\n   //              if (!value) {\n   //                  return {\n   //                      content: 'You must agree to the terms and conditions',\n   //                      pointing: 'left'\n   //                  };\n   //              }\n   //              return false;\n   //          case fields.email:\n   //              if (!value.match('^([a-z0-9_-]+\\\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\\\.[a-z0-9_-]+)*\\\\.[a-z]{2,6}$')) {\n   //                  return {\n   //                      content: 'Incorrect email address',\n   //                      pointing: 'left'\n   //                  };\n   //              }\n   //              return false;\n   //          default:\n   //              return false\n   //      }\n   //  }\n\n    // console.log(formState);\nif(props.action === 'register') {\n    return (\n        <Form id={'register-ui-form'}>\n            <Form.Group widths='equal'>\n                <Form.Field\n                    id='form-input-control-first-name'\n                    control={Input}\n                    width={8}\n                    error={validate.hasErrors(fields.firstName)}\n                    onChange={e => validate.addValue(fields.firstName, e.target.value)}\n                    label='First name'\n                    placeholder='First name'\n                />\n                <Form.Field\n                    id='form-input-control-last-name'\n                    error={validate.hasErrors(fields.lastName)}\n                    control={Input}\n                    width={8}\n                    onChange={e => validate.addValue(fields.lastName, e.target.value)}\n                    label='Last name'\n                    placeholder='Last name'\n                />\n            </Form.Group>\n            <Form.Group>\n                <Form.Field\n                    id='form-input-control-last-name'\n                    error={validate.hasErrors('password')}\n                    control={Input}\n                    width={8}\n                    onChange={e => validate.addValue('password', e.target.value)}\n                    label='Password'\n                    type='password'\n                    placeholder='password'\n                />\n                <Form.Field\n                    id='form-input-control-last-name'\n                    error={validate.hasErrors('email')}\n                    control={Input}\n                    width={8}\n                    onChange={e => validate.addValue('email', e.target.value)}\n                    label='Email address'\n                    type='email'\n                    placeholder='email'\n                />\n            </Form.Group>\n            <Form.Field>\n                <Form.Checkbox\n                    onClick={(e, {checked}) => validate.addValue(fields.terms, checked)}\n                    error={hasErrors(fields.terms)}\n                    label='I agree to the Terms and Conditions'\n                />\n            </Form.Field>\n            <Form.Button\n                content='Submit'\n                onClick={() => validate.submitForm()}\n            />\n        </Form>\n    )\n}\nreturn (\n    <Form id={'register-ui-form'}>\n        <Form.Group>\n            <Form.Field\n                id='form-input-control-last-name'\n                error={validate.hasErrors('password')}\n                control={Input}\n                width={8}\n                onChange={e => validate.addValue('password', e.target.value)}\n                label='Password'\n                type='password'\n                placeholder='password'\n            />\n            <Form.Field\n                id='form-input-control-last-name'\n                error={validate.hasErrors('email')}\n                control={Input}\n                width={8}\n                onChange={e => validate.addValue('email', e.target.value)}\n                label='Email address'\n                type='email'\n                placeholder='email'\n            />\n        </Form.Group>\n        <Form.Field>\n        </Form.Field>\n        <Form.Button\n            content='Submit'\n            onClick={() => validate.submitForm()}\n        />\n    </Form>\n)\n}\n\nexport default RegisterForm"]},"metadata":{},"sourceType":"module"}