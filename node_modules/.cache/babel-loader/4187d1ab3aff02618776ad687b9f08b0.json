{"ast":null,"code":"import _slicedToArray from \"/var/www/reactapps/testing-app-refactoring/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/var/www/reactapps/testing-app-refactoring/src/components/pages/RegisterForm.js\";\nimport React, { useState } from 'react';\nimport { Form, Input } from 'semantic-ui-react';\nimport { Link } from \"react-router-dom\";\n/**\n * Registration/Login Form\n */\n\nfunction RegisterForm() {\n  const fields = {\n    firstName: 'firstName',\n    lastName: 'lastName',\n    password: 'password',\n    email: 'email',\n    terms: 'terms'\n  };\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        formState = _useState2[0],\n        setFormState = _useState2[1];\n\n  console.log(formState);\n\n  function addValue(key, value) {\n    setFormState([...formState.filter(el => el.key !== key), {\n      key: key,\n      value: value,\n      error: retrieveErrors(key, value)\n    }]);\n  }\n\n  function hasErrors(key) {\n    let element = formState.filter(el => el.key === key).pop();\n    if (element) return element.error;\n  }\n\n  function submitForm(e) {\n    let checking = [];\n\n    for (let field in fields) {\n      if (formState.filter(el => el.key === field).length === 0) {\n        //addValue(field, 0);\n        checking.push({\n          key: field,\n          value: '',\n          error: retrieveErrors(field, 0)\n        });\n      }\n    }\n\n    setFormState([...formState, ...checking]);\n    console.log(formState.filter(el => el.error !== false)); // if(formState.filter(el => el.error !== false).length === 0) {\n    //     window.location.href = \"/mainPage\";\n    // }\n  }\n\n  function retrieveErrors(key, value) {\n    if (!value || value.length < 1) {\n      return {\n        content: 'this is required field',\n        pointing: 'left'\n      };\n    }\n\n    switch (key) {\n      case fields.firstName:\n        if (value.length < 5) {\n          return {\n            content: 'Not enough characters',\n            pointing: 'left'\n          };\n        }\n\n        return false;\n\n      case fields.lastName:\n        if (value.length < 2) {\n          return {\n            content: 'Not enough characters',\n            pointing: 'left'\n          };\n        }\n\n        return false;\n\n      case fields.password:\n        if (value.length < 4) {\n          return {\n            content: 'Not enough characters',\n            pointing: 'left'\n          };\n        }\n\n        return false;\n\n      case fields.terms:\n        if (!value) {\n          return {\n            content: 'You must agree to the terms and conditions',\n            pointing: 'left'\n          };\n        }\n\n        return false;\n\n      case fields.email:\n        if (!value.match('^([a-z0-9_-]+\\\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\\\.[a-z0-9_-]+)*\\\\.[a-z]{2,6}$')) {\n          return {\n            content: 'Incorrect email address',\n            pointing: 'left'\n          };\n        }\n\n        return false;\n\n      default:\n        return false;\n    }\n  } // console.log(formState);\n\n\n  return React.createElement(Form, {\n    id: 'register-ui-form',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    widths: \"equal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    id: \"form-input-control-first-name\",\n    control: Input,\n    width: 8,\n    error: hasErrors(fields.firstName),\n    onChange: e => addValue(fields.firstName, e.target.value),\n    label: \"First name\",\n    placeholder: \"First name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(Form.Field, {\n    id: \"form-input-control-last-name\",\n    error: hasErrors(fields.lastName),\n    control: Input,\n    width: 8,\n    onChange: e => addValue(fields.lastName, e.target.value),\n    label: \"Last name\",\n    placeholder: \"Last name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    id: \"form-input-control-last-name\",\n    error: hasErrors('password'),\n    control: Input,\n    width: 8,\n    onChange: e => addValue('password', e.target.value),\n    label: \"Password\",\n    type: \"password\",\n    placeholder: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }), React.createElement(Form.Field, {\n    id: \"form-input-control-last-name\",\n    error: hasErrors('email'),\n    control: Input,\n    width: 8,\n    onChange: e => addValue('email', e.target.value),\n    label: \"Email address\",\n    type: \"email\",\n    placeholder: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(Form.Checkbox, {\n    onClick: (e, {\n      checked\n    }) => addValue(fields.terms, checked),\n    error: hasErrors(fields.terms),\n    label: \"I agree to the Terms and Conditions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  })), React.createElement(Form.Button, {\n    content: \"Submit\",\n    onClick: e => submitForm(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }));\n}\n\nexport default RegisterForm;","map":{"version":3,"sources":["/var/www/reactapps/testing-app-refactoring/src/components/pages/RegisterForm.js"],"names":["React","useState","Form","Input","Link","RegisterForm","fields","firstName","lastName","password","email","terms","formState","setFormState","console","log","addValue","key","value","filter","el","error","retrieveErrors","hasErrors","element","pop","submitForm","e","checking","field","length","push","content","pointing","match","target","checked"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {Form, Input} from 'semantic-ui-react'\nimport {Link} from \"react-router-dom\";\n\n/**\n * Registration/Login Form\n */\nfunction RegisterForm() {\n\n    const fields = {\n        firstName: 'firstName',\n        lastName: 'lastName',\n        password: 'password',\n        email: 'email',\n        terms: 'terms',\n    };\n\n    const [formState, setFormState] = useState([]);\n\n    console.log(formState);\n\n    function addValue(key, value) {\n        setFormState(\n            [...formState.filter(el => el.key !== key),\n                {\n                    key: key,\n                    value: value,\n                    error: retrieveErrors(key, value)\n                }\n            ]\n        );\n    }\n\n    function hasErrors(key) {\n        let element = formState.filter(el => el.key === key).pop();\n        if (element) return element.error;\n\n    }\n\n    function submitForm(e) {\n\n        let checking = [];\n        for (let field in fields) {\n            if(formState.filter(el => el.key === field).length === 0){\n                //addValue(field, 0);\n                checking.push(\n                    {\n                        key: field,\n                        value: '',\n                        error: retrieveErrors(field, 0)\n                    }\n                );\n            }\n        }\n        setFormState(\n            [...formState,\n                ...checking\n            ]\n        );\n        console.log(formState.filter(el => el.error !== false));\n        // if(formState.filter(el => el.error !== false).length === 0) {\n        //     window.location.href = \"/mainPage\";\n        // }\n\n    }\n\n    function retrieveErrors(key, value) {\n        if (!value || value.length < 1) {\n            return {\n                content: 'this is required field',\n                pointing: 'left'\n            };\n        }\n        switch (key) {\n            case fields.firstName:\n                if (value.length < 5) {\n                    return {\n                        content: 'Not enough characters',\n                        pointing: 'left'\n                    };\n                }\n                return false;\n            case fields.lastName:\n                if (value.length < 2) {\n                    return {\n                        content: 'Not enough characters',\n                        pointing: 'left'\n                    };\n                }\n                return false;\n            case fields.password:\n                if (value.length < 4) {\n                    return {\n                        content: 'Not enough characters',\n                        pointing: 'left'\n                    };\n                }\n                return false;\n            case fields.terms:\n                if (!value) {\n                    return {\n                        content: 'You must agree to the terms and conditions',\n                        pointing: 'left'\n                    };\n                }\n                return false;\n            case fields.email:\n                if (!value.match('^([a-z0-9_-]+\\\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\\\.[a-z0-9_-]+)*\\\\.[a-z]{2,6}$')) {\n                    return {\n                        content: 'Incorrect email address',\n                        pointing: 'left'\n                    };\n                }\n                return false;\n            default:\n                return false\n        }\n    }\n\n    // console.log(formState);\n\n    return (\n        <Form id={'register-ui-form'}>\n            <Form.Group widths='equal'>\n                <Form.Field\n                    id='form-input-control-first-name'\n                    control={Input}\n                    width={8}\n                    error={hasErrors(fields.firstName)}\n                    onChange={e => addValue(fields.firstName, e.target.value)}\n                    label='First name'\n                    placeholder='First name'\n                />\n                <Form.Field\n                    id='form-input-control-last-name'\n                    error={hasErrors(fields.lastName)}\n                    control={Input}\n                    width={8}\n                    onChange={e => addValue(fields.lastName, e.target.value)}\n                    label='Last name'\n                    placeholder='Last name'\n                />\n            </Form.Group>\n            <Form.Group>\n                <Form.Field\n                    id='form-input-control-last-name'\n                    error={hasErrors('password')}\n                    control={Input}\n                    width={8}\n                    onChange={e => addValue('password', e.target.value)}\n                    label='Password'\n                    type='password'\n                    placeholder='password'\n                />\n                <Form.Field\n                    id='form-input-control-last-name'\n                    error={hasErrors('email')}\n                    control={Input}\n                    width={8}\n                    onChange={e => addValue('email', e.target.value)}\n                    label='Email address'\n                    type='email'\n                    placeholder='email'\n                />\n            </Form.Group>\n            <Form.Field>\n                <Form.Checkbox\n                    onClick={(e, {checked}) => addValue(fields.terms, checked)}\n                    error={hasErrors(fields.terms)}\n                    label='I agree to the Terms and Conditions'\n                />\n            </Form.Field>\n            {/*<Link to=\"/mainPage\">*/}\n            <Form.Button\n                content='Submit'\n                onClick={e => submitForm(e)}\n            />\n            {/*<Button*/}\n            {/*</Link>*/}\n        </Form>\n    )\n}\n\nexport default RegisterForm"]},"metadata":{},"sourceType":"module"}