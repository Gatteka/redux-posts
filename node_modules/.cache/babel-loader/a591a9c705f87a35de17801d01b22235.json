{"ast":null,"code":"import { connect } from 'react-redux';\nimport { showForm } from '../actions';\nimport Button from '../components/Button';\n\nconst mapStateToProps = (state, ownProps) => ({\n  showElement: ownProps.showElement,\n  enabled: buttonState(state, ownProps)\n});\n\nfunction buttonState(state, ownProps) {\n  let buttonState = state.form.filter(b => b.showElement === ownProps.showElement).pop();\n\n  if (!buttonState) {\n    return;\n  }\n\n  return buttonState.enabled;\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => dispatch(showForm(ownProps.showElement))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Button);","map":{"version":3,"sources":["/var/www/reactapps/testing-app/src/containers/Button.js"],"names":["connect","showForm","Button","mapStateToProps","state","ownProps","showElement","enabled","buttonState","form","filter","b","pop","mapDispatchToProps","dispatch","onClick"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,QAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAGA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC1CC,EAAAA,WAAW,EAAED,QAAQ,CAACC,WADoB;AAE1CC,EAAAA,OAAO,EAAEC,WAAW,CAACJ,KAAD,EAAQC,QAAR;AAFsB,CAAtB,CAAxB;;AAKA,SAASG,WAAT,CAAqBJ,KAArB,EAA4BC,QAA5B,EAAsC;AAClC,MAAIG,WAAW,GAAGJ,KAAK,CAACK,IAAN,CAAWC,MAAX,CAAkBC,CAAC,IAAIA,CAAC,CAACL,WAAF,KAAkBD,QAAQ,CAACC,WAAlD,EAA+DM,GAA/D,EAAlB;;AACA,MAAI,CAACJ,WAAL,EAAkB;AACd;AACH;;AACD,SAAOA,WAAW,CAACD,OAAnB;AACH;;AAED,MAAMM,kBAAkB,GAAG,CAACC,QAAD,EAAWT,QAAX,MAAyB;AAChDU,EAAAA,OAAO,EAAE,MAAMD,QAAQ,CAACb,QAAQ,CAACI,QAAQ,CAACC,WAAV,CAAT;AADyB,CAAzB,CAA3B;;AAIA,eAAeN,OAAO,CAClBG,eADkB,EAElBU,kBAFkB,CAAP,CAGbX,MAHa,CAAf","sourcesContent":["import {connect} from 'react-redux'\nimport {showForm} from '../actions'\nimport Button from '../components/Button'\n\n\nconst mapStateToProps = (state, ownProps) => ({\n    showElement: ownProps.showElement,\n    enabled: buttonState(state, ownProps)\n});\n\nfunction buttonState(state, ownProps) {\n    let buttonState = state.form.filter(b => b.showElement === ownProps.showElement).pop();\n    if (!buttonState) {\n        return\n    }\n    return buttonState.enabled\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    onClick: () => dispatch(showForm(ownProps.showElement))\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Button)"]},"metadata":{},"sourceType":"module"}