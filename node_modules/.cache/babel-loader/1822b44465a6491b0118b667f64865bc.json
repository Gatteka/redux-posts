{"ast":null,"code":"import _slicedToArray from \"/var/www/reactapps/testing-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/var/www/reactapps/testing-app/src/components/Form.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { sendForm, showForm, updatePost } from '../actions';\nimport { Form as AreaForm, TextArea } from 'semantic-ui-react'; //return main form with various buttons\n\nfunction Form({\n  dispatch,\n  status = {\n    enabled: false\n  }\n}) {\n  console.log('__FORM____');\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        title = _useState2[0],\n        setTitle = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        text = _useState4[0],\n        setText = _useState4[1];\n\n  useEffect(() => {\n    if (status.optionalState) {\n      setTitle(status.optionalState.title);\n      setText(status.optionalState.text);\n    }\n  }, [status.optionalState]);\n  console.log(status);\n  console.log(status.optionalState);\n  return React.createElement(\"div\", {\n    className: 'ui segment' + \" \" + (status.enabled ? 'normal' : 'hidden'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Post title\"), React.createElement(\"div\", {\n    className: 'ui input',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: 'input',\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Post data\"), React.createElement(AreaForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(TextArea, {\n    placeholder: \"Tell us more\",\n    value: text,\n    onChange: e => setText(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(CurrentButton, {\n    dispatch: dispatch,\n    status: status,\n    title: title,\n    text: text,\n    optionalState: status.optionalState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })));\n} // return 'Create Post' or 'Update post' buttons in form\n\n\nfunction CurrentButton({\n  dispatch,\n  status,\n  title,\n  text,\n  optionalState\n}) {\n  if (status && status.elementAction === 'create') {\n    return React.createElement(\"button\", {\n      type: \"submit\",\n      className: 'ui primary button',\n      onClick: e => {\n        e.preventDefault();\n        dispatch(sendForm(title, text, status.optionalState.id));\n        dispatch(showForm(status.showElement));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Create Post\");\n  }\n\n  return React.createElement(\"button\", {\n    type: \"submit\",\n    className: 'ui primary button',\n    onClick: e => {\n      e.preventDefault();\n      dispatch(updatePost(title, text)); // dispatch(updatePost(title, area));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Update Post\");\n}\n\nexport default connect()(Form);","map":{"version":3,"sources":["/var/www/reactapps/testing-app/src/components/Form.js"],"names":["React","useState","useEffect","connect","sendForm","showForm","updatePost","Form","AreaForm","TextArea","dispatch","status","enabled","console","log","title","setTitle","text","setText","optionalState","e","target","value","CurrentButton","elementAction","preventDefault","id","showElement"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {sendForm, showForm, updatePost} from '../actions'\nimport {Form as AreaForm, TextArea} from 'semantic-ui-react'\n\n//return main form with various buttons\nfunction Form({dispatch, status = {enabled: false}}) {\n    console.log('__FORM____');\n\n    const [title, setTitle] = useState(\"\");\n    const [text, setText] = useState(\"\");\n\n    useEffect(() => {\n        if (status.optionalState) {\n                setTitle(status.optionalState.title);\n                setText(status.optionalState.text);\n        }\n    },[status.optionalState]);\n\n    console.log(status);\n    console.log(status.optionalState);\n    return (\n        <div className={'ui segment' + \" \" + (status.enabled ? 'normal' : 'hidden')}>\n            <p>Post title</p>\n            <div className={'ui input'}>\n                <input className={'input'} value={title} onChange={e => setTitle(e.target.value)}/>\n            </div>\n            <p>Post data</p>\n            <AreaForm>\n                <TextArea placeholder='Tell us more' value={text} onChange={e => setText(e.target.value)}/>\n            </AreaForm>\n\n            <div>\n                <CurrentButton\n                    dispatch={dispatch}\n                    status={status}\n                    title={title}\n                    text={text}\n                    optionalState={status.optionalState}\n                />\n            </div>\n        </div>\n    );\n}\n\n// return 'Create Post' or 'Update post' buttons in form\nfunction CurrentButton({dispatch, status, title, text, optionalState}) {\n    if (status && status.elementAction === 'create') {\n        return (\n            <button\n                type=\"submit\"\n                className={'ui primary button'}\n                onClick={e => {\n                    e.preventDefault();\n                    dispatch(sendForm(title, text, status.optionalState.id));\n                    dispatch(showForm(status.showElement));\n                }}>\n                Create Post\n            </button>\n        );\n    }\n    return (\n        <button\n            type=\"submit\"\n            className={'ui primary button'}\n            onClick={e => {\n                e.preventDefault();\n                dispatch(updatePost(title,text));\n                // dispatch(updatePost(title, area));\n            }}>\n            Update Post\n        </button>\n    );\n}\n\nexport default connect()(Form)"]},"metadata":{},"sourceType":"module"}