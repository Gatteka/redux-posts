{"ast":null,"code":"import _slicedToArray from \"/var/www/reactapps/testing-app-refactoring/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/var/www/reactapps/testing-app-refactoring/src/components/pages/RegisterForm.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Form, Input } from 'semantic-ui-react';\n\nfunction RegisterForm() {\n  // const [validation, setValidation] = useState('');\n  // const [firstName, setFirstName] = useState('');\n  // const [lastName, setLastName] = useState('');\n  // const [password, setPassword] = useState('');\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        formState = _useState2[0],\n        setFormState = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        checkboxAccepted = _useState4[0],\n        setCheckboxAccepted = _useState4[1]; // useEffect(() => {\n  //     if (!validation) {\n  //         console.log('s');\n  //         return <Component.type {...Component.props} {...extraProps} />;\n  //     }\n  // }, [validation]);\n\n\n  console.log(formState); //console.log(checkboxAccepted);\n\n  function addValue(key, value) {\n    setFormState([...formState.filter(el => el.key !== key), {\n      key: key,\n      value: value,\n      error: retrieveErrors(key, value)\n    }]);\n  }\n\n  function hasErrors(key) {\n    let element = formState.filter(el => el.key === key).pop();\n    return element ? element.error.pop() : false;\n  }\n\n  function retrieveErrors(key, value) {\n    switch (key) {\n      case 'firstName':\n        if (value.length < 5) {\n          return {\n            content: 'You must agree to the terms and conditions',\n            pointing: 'left'\n          };\n        }\n\n        return false;\n\n      case 'lastName':\n        if (value.length < 2) {\n          return {\n            content: 'You must agree to the terms and conditions',\n            pointing: 'left'\n          };\n        }\n\n        return false;\n\n      case 'password':\n        if (value.length < 1) {\n          return {\n            content: 'You must agree to the terms and conditions',\n            pointing: 'left'\n          };\n        }\n\n        return false;\n\n      default:\n        return false;\n    }\n  }\n\n  console.log(formState);\n  return React.createElement(Form, {\n    id: 'register-ui-form',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    widths: \"equal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    id: \"form-input-control-first-name\",\n    control: Input,\n    error: hasErrors('firstName') // value={formState['firstName']}\n    ,\n    onChange: e => addValue('firstName', e.target.value),\n    label: \"First name\",\n    placeholder: \"First name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(Form.Field, {\n    id: \"form-input-control-last-name\",\n    error: hasErrors('lastName'),\n    control: Input // value={formState['lastName']}\n    ,\n    onChange: e => addValue('lastName', e.target.value) //onChange={e => validateRegisterForm(lastName, e.target.value)}\n    ,\n    label: \"Last name\",\n    placeholder: \"Last name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    id: \"form-input-control-last-name\",\n    error: hasErrors('password'),\n    control: Input //value={formState['password']}\n    ,\n    onChange: e => addValue('password', e.target.value),\n    label: \"password\",\n    placeholder: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Form.Checkbox, {\n    onClick: () => setCheckboxAccepted(!checkboxAccepted),\n    error: {\n      content: 'You must agree to the terms and conditions',\n      pointing: 'left'\n    },\n    label: \"I agree to the Terms and Conditions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })), React.createElement(Form.Button, {\n    content: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }));\n}\n\nexport default RegisterForm;","map":{"version":3,"sources":["/var/www/reactapps/testing-app-refactoring/src/components/pages/RegisterForm.js"],"names":["React","useEffect","useState","Form","Input","RegisterForm","formState","setFormState","checkboxAccepted","setCheckboxAccepted","console","log","addValue","key","value","filter","el","error","retrieveErrors","hasErrors","element","pop","length","content","pointing","e","target"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {Form, Input} from 'semantic-ui-react'\n\n\nfunction RegisterForm() {\n\n    // const [validation, setValidation] = useState('');\n    // const [firstName, setFirstName] = useState('');\n    // const [lastName, setLastName] = useState('');\n    // const [password, setPassword] = useState('');\n    const [formState, setFormState] = useState([]);\n    const [checkboxAccepted, setCheckboxAccepted] = useState(false);\n\n    // useEffect(() => {\n    //     if (!validation) {\n    //         console.log('s');\n    //         return <Component.type {...Component.props} {...extraProps} />;\n    //     }\n    // }, [validation]);\n    console.log(formState);\n\n    //console.log(checkboxAccepted);\n\n    function addValue(key, value) {\n        setFormState(\n            [...formState.filter(el => el.key !== key),\n                {\n                    key: key,\n                    value: value,\n                    error: retrieveErrors(key, value)\n                }\n            ]\n        );\n    }\n\n    function hasErrors(key) {\n        let element = formState.filter(el => el.key === key).pop();\n      return element ? (element.error.pop() ) : false;\n    }\n\n    function retrieveErrors(key, value) {\n\n        switch (key) {\n            case 'firstName':\n                if (value.length < 5) {\n                    return {\n                        content: 'You must agree to the terms and conditions',\n                            pointing: 'left'\n                    };\n                }\n                return false;\n            case 'lastName':\n                if (value.length < 2) {\n                    return {\n                        content: 'You must agree to the terms and conditions',\n                        pointing: 'left'\n                    };\n                }\n                return false;\n            case 'password':\n                if (value.length < 1) {\n                    return {\n                        content: 'You must agree to the terms and conditions',\n                        pointing: 'left'\n                    };\n                }\n                return false;\n            default:\n                return false\n        }\n    }\n\n    console.log(formState);\n\n    return (\n        <Form id={'register-ui-form'}>\n            <Form.Group widths='equal'>\n                <Form.Field\n                    id='form-input-control-first-name'\n                    control={Input}\n                    error={hasErrors('firstName')}\n                    // value={formState['firstName']}\n                    onChange={e => addValue('firstName', e.target.value)}\n                    label='First name'\n                    placeholder='First name'\n                />\n                <Form.Field\n                    id='form-input-control-last-name'\n                    error={hasErrors('lastName')}\n                    control={Input}\n                    // value={formState['lastName']}\n                    onChange={e => addValue('lastName', e.target.value)}\n                    //onChange={e => validateRegisterForm(lastName, e.target.value)}\n                    label='Last name'\n                    placeholder='Last name'\n                />\n            </Form.Group>\n            <Form.Group>\n                <Form.Field\n                    id='form-input-control-last-name'\n                    error={hasErrors('password')}\n                    control={Input}\n                    //value={formState['password']}\n                    onChange={e => addValue('password', e.target.value)}\n                    label='password'\n                    placeholder='password'\n                />\n            </Form.Group>\n            <Form.Field>\n                <Form.Checkbox\n                    onClick={() => setCheckboxAccepted(!checkboxAccepted)}\n                    error={{\n                        content: 'You must agree to the terms and conditions',\n                        pointing: 'left'\n                    }}\n                    label='I agree to the Terms and Conditions'\n                />\n            </Form.Field>\n            <Form.Button content='Submit'/>\n        </Form>\n    )\n}\n\nexport default RegisterForm"]},"metadata":{},"sourceType":"module"}