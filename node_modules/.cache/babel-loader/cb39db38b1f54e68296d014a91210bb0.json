{"ast":null,"code":"import { connect } from 'react-redux';\nimport { applyMiddleware } from 'redux';\nimport { deletePost, createPost, showForm, showUpdateForm, updatePost } from '../../actions';\nimport Button from '../../components/Buttons/Button';\nimport createSagaMiddleware from 'redux-saga';\nimport { put, takeEvery, all } from 'redux-saga/effects';\nimport { sagaMiddleware } from '../../index'; // const mapStateToProps = (state, ownProps) => ({\n//     showElement: ownProps.showElement ? ownProps.showElement : false,\n//     action: ownProps.action,\n//     result: formState(state, ownProps.showElement),\n//     postId: ownProps.postId ? ownProps.postId : false\n// });\n\nfunction mapStateToProps(state, ownProps) {\n  console.log('Button');\n  console.log(state);\n  console.log(ownProps);\n  return {\n    showElement: ownProps.showElement ? ownProps.showElement : false,\n    action: ownProps.action,\n    formEnable: state.form,\n    result: getButtonText(state, ownProps),\n    postId: ownProps.postId ? ownProps.postId : false,\n    buttonText: ownProps.buttonText ? ownProps.buttonText : false\n  };\n}\n\nfunction getButtonText(state, ownProps) {\n  if (!ownProps.showElement) {\n    return ownProps.buttonText;\n  }\n\n  let formState = state.form.filter(v => v.showElement === ownProps.showElement).pop();\n\n  if (!formState) {\n    return ownProps.buttonText;\n  }\n\n  return formState.enabled ? \"Hide Form\" : \"Show Form\";\n}\n\nfunction* helloSaga() {\n  console.log('Hello Sagas!');\n}\n\nfunction* watchIncrementAsync() {\n  yield takeEvery('SHOW_FORM', helloSaga);\n}\n\nsagaMiddleware.run(watchIncrementAsync);\n/** mapDispatchToProps\n * adds event to our prop. We can use it from Button component as well. */\n\nfunction mapDispatchToProps(dispatch, ownProps) {\n  return {\n    onClick: function () {\n      let action = ownProps.action;\n\n      switch (action) {\n        case 'showForm':\n          return dispatch(showForm(ownProps.showElement));\n\n        case 'createPost':\n          dispatch(showForm(ownProps.showElement));\n          dispatch(createPost(ownProps.title, ownProps.text, ownProps.state));\n\n        case 'deletePost':\n          return dispatch(deletePost(ownProps.postId));\n\n        case 'updatePost':\n          return dispatch(updatePost(ownProps.title, ownProps.text));\n\n        case 'showUpdateForm':\n          return dispatch(showUpdateForm(ownProps.postId, ownProps.title, ownProps.text));\n      }\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Button);","map":{"version":3,"sources":["/var/www/reactapps/testing-app-refactoring/src/containers/Buttons/Button.js"],"names":["connect","applyMiddleware","deletePost","createPost","showForm","showUpdateForm","updatePost","Button","createSagaMiddleware","put","takeEvery","all","sagaMiddleware","mapStateToProps","state","ownProps","console","log","showElement","action","formEnable","form","result","getButtonText","postId","buttonText","formState","filter","v","pop","enabled","helloSaga","watchIncrementAsync","run","mapDispatchToProps","dispatch","onClick","title","text"],"mappings":"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","sourcesContent":["import {connect,} from 'react-redux'\nimport { applyMiddleware } from 'redux'\nimport {deletePost, createPost, showForm, showUpdateForm, updatePost} from '../../actions'\nimport Button from '../../components/Buttons/Button'\nimport createSagaMiddleware from 'redux-saga'\nimport { put, takeEvery, all } from 'redux-saga/effects'\nimport { sagaMiddleware }  from  '../../index'\n\n// const mapStateToProps = (state, ownProps) => ({\n//     showElement: ownProps.showElement ? ownProps.showElement : false,\n//     action: ownProps.action,\n//     result: formState(state, ownProps.showElement),\n//     postId: ownProps.postId ? ownProps.postId : false\n// });\n\nfunction mapStateToProps(state, ownProps) {\n    console.log('Button');\n    console.log(state);\n    console.log(ownProps);\n    return {\n        showElement: ownProps.showElement ? ownProps.showElement : false,\n        action: ownProps.action,\n        formEnable: state.form,\n        result: getButtonText(state, ownProps),\n        postId: ownProps.postId ? ownProps.postId : false,\n        buttonText: ownProps.buttonText ? ownProps.buttonText : false,\n    }\n}\n\nfunction getButtonText(state, ownProps) {\n    if (!ownProps.showElement) {\n        return ownProps.buttonText\n    }\n    let formState = state.form.filter(v => v.showElement === ownProps.showElement).pop();\n    if (!formState) {\n        return ownProps.buttonText\n    }\n    return formState.enabled ? \"Hide Form\" : \"Show Form\"\n}\n\nfunction* helloSaga() {\n    console.log('Hello Sagas!')\n}\n\nfunction* watchIncrementAsync() {\n    yield takeEvery('SHOW_FORM', helloSaga)\n}\n\nsagaMiddleware.run(watchIncrementAsync);\n\n/** mapDispatchToProps\n * adds event to our prop. We can use it from Button component as well. */\nfunction mapDispatchToProps(dispatch, ownProps) {\n    return {\n        onClick: function () {\n            let action = ownProps.action;\n            switch (action) {\n                case 'showForm':\n                    return dispatch(showForm(ownProps.showElement));\n                case 'createPost':\n                     dispatch(showForm(ownProps.showElement));\n                     dispatch(createPost(ownProps.title,ownProps.text,ownProps.state));\n                case 'deletePost':\n                    return dispatch(deletePost(ownProps.postId));\n                case 'updatePost':\n                    return dispatch(updatePost(ownProps.title, ownProps.text));\n                case 'showUpdateForm':\n                    return dispatch(showUpdateForm(ownProps.postId, ownProps.title, ownProps.text));\n            }\n        }\n    }\n}\n\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Button)"]},"metadata":{},"sourceType":"module"}